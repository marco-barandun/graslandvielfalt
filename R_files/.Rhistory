theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
labs(color = "Year") +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023),
data = avg_change, arrow = arrow(length = unit(0.3, "cm")), color = "black")
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1) +
scale_color_manual(values = c("red", "blue")) +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
labs(color = "Year") +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023),
data = avg_change, arrow = arrow(length = unit(0.3, "cm")), color = "black") +
# add text labels
geom_text(aes(x = Category, y = (avg_2003 + avg_2023)/2, label = round(avg_diff, 2)),
data = avg_change, vjust = -0.5)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1) +
scale_color_manual(values = c("red", "blue")) +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
labs(color = "Year") +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023),
data = avg_change, arrow = arrow(length = unit(0.3, "cm")), color = "black")
library(RColorBrewer)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(0.3, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023,
color = avg_diff, size = abs(avg_diff)),
data = avg_change,
arrow = arrow(length = unit(0.3, "cm")), lineend = "butt", alpha = 0.3) +
geom_text(aes(x = Category, y = avg_2023, label = round(avg_2023, 1)),
data = avg_change, hjust = 2, size = 3) +
scale_size_continuous(range = c(0.5, 2), guide = FALSE) +
scale_color_gradient2(low = "blue", high = "red", midpoint = 0, guide = FALSE) +
guides(color = guide_legend(title = "Avg Change (2023 - 2003)"),
size = guide_legend(title = "Arrow thickness"))
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023,
color = avg_diff, size = abs(avg_diff)),
data = avg_change,
arrow = arrow(length = unit(0.3, "cm")), lineend = "butt", alpha = 0.3) +
geom_text(aes(x = Category, y = avg_2023, label = round(avg_2023, 1)),
data = avg_change, hjust = 2, size = 3)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 2, aes(fill=Group), position = position_jitter(w = 0.2, h = 0)) +
scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values=c("#FFB347", "#AEC6CF")) +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
labs(color = "Year", fill="Year") +
# add arrows
geom_arrow(aes(x = Category, y = avg_2003, xend = Category, yend = avg_2023, size=avg_diff),
data = avg_change, color = "gray", alpha = 0.8, lineend = "butt", length = unit(0.25, "inches"),
angle = 20, ends = "last", type = "closed") +
scale_size_continuous(range=c(0.5, 2.5), guide=FALSE) # adjust arrow thickness
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(0.3, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2), alpha = 0.7, color = "grey50") +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
expand_limits(y = c(0, 1)) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(type = "open", length = unit(0.3, "cm")), color = "grey40", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(0.3, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(0.3, "cm")), color = "grey50", alpha = 0.7) +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(0.5, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(0.7, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Diversity") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Category") +
ylab("Land-use history") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
ggsave("/Users/marco/kDocuments_Marco/PhD/proposal/Hypothesis_Figures/")
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE)
ggsave("/Users/marco/kDocuments_Marco/PhD/proposal/Hypothesis_Figures/")
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add legend for categories
scale_x_discrete(labels = c("CE" = "Constant Extensive", "IE" = "Intensive to Extensive", "EI" = "Extensive to Intensive", "CI" = "Constant Intensive"),
guide = guide_legend(title = "Land-use history categories"))
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add legend for categories
scale_x_discrete(labels = c("CE" = "Constant Extensive", "IE" = "Intensive to Extensive", "EI" = "Extensive to Intensive", "CI" = "Constant Intensive"),
guide = guide_legend(title = "Land-use history categories"))
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add text box
annotate("text", x = 0.5, y = 0.95, label = "Land-use history categories:",
size = 5, fontface = "bold", hjust = 0.5, vjust = 1.5) +
annotate("text", x = 0.3, y = 0.88, label = "CE = constant extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.3, y = 0.83, label = "IE = intensive to extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.3, y = 0.78, label = "EI = extensive to intensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.3, y = 0.73, label = "CI = constant intensive", size = 4, hjust = 0, vjust = 1.5)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add text box
annotate("text", x = 0.5, y = 0.95, label = "Land-use history categories:",
size = 5, fontface = "bold", hjust = 0.5, vjust = 1.5) +
annotate("text", x = 0.3, y = 5, label = "CE = constant extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.3, y = 4, label = "IE = intensive to extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.3, y = 3, label = "EI = extensive to intensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.3, y = 2, label = "CI = constant intensive", size = 4, hjust = 0, vjust = 1.5)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add text box
annotate("text", x = 0.5, y = 5, label = "Land-use history categories:",
size = 5, fontface = "bold", hjust = 0.5, vjust = 1.5) +
annotate("text", x = 0.5, y = 4, label = "CE = constant extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 3, label = "IE = intensive to extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 2, label = "EI = extensive to intensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 1, label = "CI = constant intensive", size = 4, hjust = 0, vjust = 1.5)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add text box
annotate("text", x = 0.5, y = 5, label = "Land-use history categories:",
size = 4, fontface = "bold", hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 4, label = "CE = constant extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 3, label = "IE = intensive to extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 2, label = "EI = extensive to intensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 1, label = "CI = constant intensive", size = 4, hjust = 0, vjust = 1.5)
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add text box
annotate("text", x = 0.5, y = 5, label = "Land-use history categories:",
size = 5, fontface = "bold", hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 4, label = "CE = constant extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 3, label = "IE = intensive to extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 2, label = "EI = extensive to intensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 1, label = "CI = constant intensive", size = 4, hjust = 0, vjust = 1.5)
ggsave("/Users/marco/kDocuments_Marco/PhD/proposal/Hypothesis_Figures/")
ggsave("/Users/marco/kDocuments_Marco/PhD/proposal/Hypothesis_Figures/Hypothesis_1.jpeg")
# create plot
ggplot(data, aes(x = Category, y = Diversity, color = Group)) +
geom_point(size = 1, position = position_jitter(width = 0.2)) +
scale_color_brewer(palette = "Pastel1", name = "Year") +
xlab("Land-use history") +
ylab("Species richness index") +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
# add arrows
geom_segment(aes(x = Category, xend = Category, y = avg_2003, yend = avg_2023, size = abs(avg_diff)),
data = avg_change, arrow = arrow(length = unit(1, "cm")), color = "grey50", alpha = 0.7, lineend = "round") +
scale_size_continuous(range = c(1, 10), guide = FALSE) +
# add text box
annotate("text", x = 0.5, y = 5, label = "Land-use history categories:",
size = 5, fontface = "bold", hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 4, label = "CE = constant extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 3, label = "IE = intensive to extensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 2, label = "EI = extensive to intensive", size = 4, hjust = 0, vjust = 1.5) +
annotate("text", x = 0.5, y = 1, label = "CI = constant intensive", size = 4, hjust = 0, vjust = 1.5) +
theme_classic()
ggsave("/Users/marco/kDocuments_Marco/PhD/proposal/Hypothesis_Figures/Hypothesis_1.jpeg")
library(parallel)
?mclapply
library(leaflet)
library(DT)
library(scales)
library(tidyverse)
library(sf)
library(htmltools)
setwd("/Users/marco/GitHub/graslandvielfalt/R_files")
source("./config_plot_map.R")
municipalities <- st_read("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/gadm41_CHE.gpkg",
layer = "ADM_ADM_3")
#plots <- read_csv("./2023-joinedPlotSelection_v2.csv") %>%
#  get_municipality(., municipalities, what = c("NAME_1", "NAME_3")) %>%
#  rename(canton = NAME_1,
#         municipality = NAME_3) %>%
#  mutate(priority = gsub("A", "", priority)) %>%
#  arrange(priority, canton, municipality, elevation) %>%
#  group_by(municipality) %>%
#  mutate(ID = paste0(priority, "-",
#                     toupper(substr(canton, 1, 2)), "-",
#                     toupper(substr(municipality, 1, 2)), "-",
#                     row_number())) %>%
#  ungroup() %>%
#  select(ID, elevation, canton, municipality, mgroup, LU1980, LU2000, LU2020, LNF_Code, everything()) %>%
#  arrange(priority, elevation)
donePlots <- read_csv("./2023-donePlots.csv") %>%
filter(!is.na(Done))
poly <- rgdal::readOGR("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp") %>%
get_polygons(plots = plots, shapefile = ., radius_m = 500)
municipalities <- st_read("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/gadm41_CHE.gpkg",
layer = "ADM_ADM_3")
donePlots <- read_csv("./2023-donePlots.csv") %>%
filter(!is.na(Done))
poly <- rgdal::readOGR("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp") %>%
get_polygons(plots = plots, shapefile = ., radius_m = 500)
#write_csv(plots, "./2023-joinedPlotSelection_v3.csv")
plots <- read_csv("./2023-joinedPlotSelection_v3.csv")
poly <- rgdal::readOGR("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp") %>%
get_polygons(plots = plots, shapefile = ., radius_m = 500)
source("./config_plot_map.R")
poly <- rgdal::readOGR("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp") %>%
get_polygons(plots = plots, shapefile = ., radius_m = 500)
poly <- rgdal::readOGR("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp")
be <- rgdal::readOGR("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp")
layers <- ogrListLayers("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp")
library(rgdal)
layers <- ogrListLayers("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp")
layers
layers[1]
poly <- be %>%
get_polygons(plots = plots, shapefile = ., radius_m = 500)
#write_csv(plots, "./2023-joinedPlotSelection_v3.csv")
plots <- read_csv("./2023-joinedPlotSelection_v3.csv")
donePlots <- read_csv("./2023-donePlots.csv") %>%
filter(!is.na(Done))
poly <- be %>%
get_polygons(plots = plots, shapefile = ., radius_m = 500)
shapefile <- be
radius_m = 500
require(sf)
require(leaflet)
require(nngeo)
require(s2)
# Check validity of geometries in the shapefile
if (!all(st_is_valid(shapefile))) {
be <- st_make_valid(shapefile)
}
shapefile <- sf::st_as_sf(shapefile)
# Check validity of geometries in the shapefile
if (!all(st_is_valid(shapefile))) {
shapefile <- st_make_valid(shapefile)
}
source("./config_plot_map.R")
poly <- be %>%
get_polygons(plots = plots, shapefile = ., radius_m = 500)
writeOGR(poly, dsn = "./2023-plots-with-be-poly.geojson",
layer = ogrListLayers("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/shapefiles/be_bewirtschaftungseinheit_view.shp")[1],
driver = "GeoJSON")
prova <- readOGR("./2023-plots-with-be-poly.geojson")
# Define a color palette with distinct colors
pal <- colorFactor(
palette = c("red", "orange", "yellow", "green", "blue", "purple", "magenta"),
domain = plots$priority
)
# Create a leaflet map with the Swiss Topographic Map as a basemap
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
# Add a button for each category in the priority variable
addLayersControl(
overlayGroups = c(unique(plots$priority), "Done Plots", "Bewirtschaftungseinheiten"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addCircleMarkers(data = plots,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = ~priority) %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
hideGroup("Bewirtschaftungseinheiten") #"MP3", "MP4", "MP5", "MP6", "MP7", "P2", "P3"
)
htmlwidgets::saveWidget(m, file=paste("./2023-plot-map.html", sep = ""))

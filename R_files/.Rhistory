popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten", "Public Transport Stops"),
options = layersControlOptions(collapsed = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
m <- addFullscreenControl(m)
map <- addControlGPS(m, options = gpsOptions(position = "topleft", activate = TRUE,
autoCenter = TRUE, maxZoom = 10,
setView = TRUE))
activateGPS(map)
htmlwidgets::saveWidget(map, file=paste("./2023-plot-map.html", sep = ""))
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten", "Public Transport Stops"),
options = layersControlOptions(collapsed = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
m <- addFullscreenControl(m)
# Add the locate button
m <- addEasyButton(
map = m,
id = "locate-button",
icon = "fa-location-arrow",
title = "Show Current Position",
onClick = JS("function(btn, map){
map.locate({setView: true});
}")
# Add the locate button
m <- addEasyButton(
# Add the locate button
m <- addEasyButton(
map = m,
id = "locate-button",
icon = "fa-location-arrow",
title = "Show Current Position",
onClick = JS("function(btn, map){
map.locate({setView: true});
}")
# Add the locate button
m <- addEasyButton(
# Add the locate button
m <- addEasyButton(
map = m,
id = "locate-button",
icon = "fa-location-arrow",
title = "Show Current Position",
onClick = JS("function(btn, map){
map.locate({setView: true});
}"))
# Add the locate button
m <- addEasyButton(
map = m,
id = "locate-button",
icon = "fa-location-arrow",
title = "Show Current Position",
onClick = JS("function(btn, map){
map.locate({setView: true});
}"))
# Add the locate control
m <- addControlLocate(
map = m,
options = locateOptions(
position = "topleft",
strings = list(
title = "Show Current Position"
)
)
)
library(mapview)
# Add the locate control
m <- addLocateControl(
map = m,
position = "topleft",
options = locateOptions(
strings = list(
title = "Show Current Position"
)
)
)
m <- addEasyButton(
map = m,
id = "locate-button",
icon = "fa-location-arrow",
title = "Show Current Position",
onClick = JS(
"function(btn, map) {
map.locate({ setView: true });
}"
)
)
# Add the GPS control with customized options
map <- addControlGPS(m, options = gpsOptions(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
markerOptions = markerOptions(
icon = makeIcon(
iconUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png",
iconSize = c(32, 32),
iconAnchor = c(16, 32),
shadowUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot-shadow.png",
shadowSize = c(48, 48),
shadowAnchor = c(16, 48),
popupAnchor = c(0, -32)
),
zIndexOffset = 1000
),
circleOptions = circleOptions(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
))
# Customize the GPS control options
gpsControlOptions <- addControlGPSOptions(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE
)
library(leaflet.extras)
# Customize the GPS control options
gpsControlOptions <- addControlGPSOptions(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE
)
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
controlArgs = list(
markerOptions = list(
icon = makeIcon(
iconUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png",
iconSize = c(32, 32),
iconAnchor = c(16, 32),
shadowUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot-shadow.png",
shadowSize = c(48, 48),
shadowAnchor = c(16, 48),
popupAnchor = c(0, -32)
),
zIndexOffset = 1000
),
circleOptions = list(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
)
)
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
controlArgs = list(
markerOptions = list(
icon = makeIcon(
iconUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png",
iconSize = c(32, 32),
iconAnchor = c(16, 32),
shadowUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot-shadow.png",
shadowSize = c(48, 48),
shadowAnchor = c(16, 48),
popupAnchor = c(0, -32)
),
zIndexOffset = 1000
),
circleOptions = list(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
)
)
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
markerOptions = markerOptions(
icon = icon(
iconUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png",
iconSize = c(32, 32),
iconAnchor = c(16, 32),
shadowUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot-shadow.png",
shadowSize = c(48, 48),
shadowAnchor = c(16, 48),
popupAnchor = c(0, -32)
),
zIndexOffset = 1000
),
circleOptions = circleOptions(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
)
library(leaflet)
library(htmlwidgets)
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
markerOptions = markerOptions(
icon = makeIcon(
iconUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png",
iconSize = c(32, 32),
iconAnchor = c(16, 32),
shadowUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot-shadow.png",
shadowSize = c(48, 48),
shadowAnchor = c(16, 48),
popupAnchor = c(0, -32)
),
zIndexOffset = 1000
),
circleOptions = circleOptions(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
)
?addControlGPS
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
markerOptions = markerOptions(
icon = makeIcon(
iconUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot.png",
iconSize = c(32, 32),
iconAnchor = c(16, 32),
shadowUrl = "https://maps.gstatic.com/mapfiles/ms2/micons/blue-dot-shadow.png",
shadowSize = c(48, 48),
shadowAnchor = c(16, 48),
popupAnchor = c(0, -32)
),
zIndexOffset = 1000
),
circleOptions = circleOptions(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
)
?markerOptions
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
markerOptions = markerOptions(
zIndexOffset = 1000
),
circleOptions = circleOptions(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
)
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
markerOptions = markerOptions(
zIndexOffset = 1000
),
circleOptions = circleOptions(
fillColor = "white",
fillOpacity = 1,
weight = 2,
color = "blue"
)
)
# Customize the GPS control options
gpsControlOptions <- list(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE,
markerOptions = markerOptions(
zIndexOffset = 1000
)
)
# Add the GPS control with customized options
map <- addControlGPS(m, options = gpsControlOptions)
# Define the current position marker
currentPosition <- data.frame(
lon = <longitude>,
# Define the current position marker
currentPosition <- data.frame(
lon = <longitude>,
# Add the GPS control to the map
map <- addControlGPS(m, options = gpsOptions(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE
))
# Activate the GPS control
activateGPS(map)
# Customizing the current position icon
customIcon <- makeIcon(
iconUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.iconfinder.com%2Ficons%2F2116812%2Fgps_location_locations_map_my_location_navigation_icon&psig=AOvVaw0JmTtyr2ye4w8eh0xg0s1n&ust=1687201995169000&source=images&cd=vfe&ved=0CBAQjhxqFwoTCLDzm6_Dzf8CFQAAAAAdAAAAABAD",
iconWidth = <desired_icon_width>,
# Customizing the current position icon
customIcon <- makeIcon(
iconUrl = "/Users/marco/Downloads/2569650.png",
iconWidth = <desired_icon_width>,
# Customizing the current position icon
customIcon <- makeIcon(
iconUrl = "/Users/marco/Downloads/2569650.png",
iconWidth = 32,
iconHeight = 32
)
map$gpsOptions$currentIcon <- customIcon
map
getwd()
# Customizing the current position icon
customIcon <- makeIcon(
iconUrl = "./icons/my_position.png",
iconWidth = 32,
iconHeight = 32
)
map$gpsOptions$currentIcon <- customIcon
(m <- leaflet(plots) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Swiss Topographic Map") %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>',
group = "Satellite View") %>%
addCircleMarkers(data = BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "BFF") %>%
addCircleMarkers(data = non_BFF,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),
group = "non_BFF") %>%
addLegend(pal = pal, values = plots$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8) %>%
addPolygons(data = poly,
fill = FALSE,
color = "darkorange",
opacity = 0.9,
group = "Bewirtschaftungseinheiten") %>%
addAwesomeMarkers(data = donePlots,
lat = ~Latitude, lng = ~Longitude,
icon = ~awesomeIcons(
icon = "leaf",
markerColor = "green",
iconColor = "white",
library = "fa"
),
labelOptions = labelOptions(noHide = TRUE, textOnly = TRUE),
label = lapply(donePlots$ID, HTML),
clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = FALSE),
group = "Done Plots") %>%
addWMSTiles(
baseUrl = "https://wms.geo.admin.ch/",
layers = "ch.bav.haltestellen-oev",
group = "Public Transport Stops",
options = WMSTileOptions(format = "image/png", transparent = TRUE)
) %>%
addLayersControl(
baseGroups = c("Swiss Topographic Map", "Satellite View"),
overlayGroups = c("BFF", "non_BFF", "Done Plots", "Bewirtschaftungseinheiten", "Public Transport Stops"),
options = layersControlOptions(collapsed = TRUE)
) %>%
hideGroup(c("Bewirtschaftungseinheiten", "Public Transport Stops"))
)
m <- addFullscreenControl(m)
# Add the GPS control to the map
map <- addControlGPS(m, options = gpsOptions(
position = "topleft",
activate = TRUE,
autoCenter = TRUE,
maxZoom = 10,
setView = TRUE
))
# Activate the GPS control
activateGPS(map)
# Customizing the current position icon
customIcon <- makeIcon(
iconUrl = "./icons/my_position.png",
iconWidth = 32,
iconHeight = 32
)
map$gpsOptions$currentIcon <- customIcon
htmlwidgets::saveWidget(map, file=paste("./2023-plot-map.html", sep = ""))
map$gpsOptions$currentIcon <- customIcon
map
